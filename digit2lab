Az űrcica féléves órai anyag/pótmérés/önálló mérés kidolgozása a Digitális technika 2 laboratórium harcosainak.
-Akik valamelyik automatikára mennek tovább, azoknak illene csak ellenőrzésnek használni.
-A pontosságot nem tudom garantálni. Errlogot szívesen fogadok a mappán belül. 

=====MÉRÉSPÓTLÁS=====

1. Számolás:
223H= ???B

2. Számolás:
a, 43H XOR 52H= ???H

b, 67H AND 32H= ???H

c, 67H OR 32H= ???H

3. 13H * 45H= ???H

4. Számolás:
a, 1041D= ???H

b, 3A1H= ???D

5. Program: Töltse fel az akkumulátort 182 D értékkel, majd az akku tartalmát DIREKT vigye az 55H című adatregiszterbe, illetve az 56H-ba INDIREKT.

6. Program: 0FFH értékkel egy ciklus felhasználásával 20H címtől kezdődően feltöltünk 60 darab regisztert.

7. Program: Másoljuk át 4000H-tól 5 bájtot a 60H-tól kezdődő címekre.

8. Program: A kódmemória első 5 bájtját az adatmemória 70H-tól kezdődő címekre másoljuk át.

9. Elmélet: Az MCS51-es mikrokontroller belső adatmemóriájának részei.

10. Elmélet: PSEN, RD, WR vezérlőjelek.

11. Elmélet: Mik az SFR regiszterek. Hol helyezkednek el, sorolj fel néhányat.

12. Elmélet: Mit csinál a következő utasítás: MOVC A, @A+DPTR

13. Elmélet: Mutasd be a bitkezelő utasításokat.

14. Elmélet: Hol helyezkedik el, és milyen 2 fő részből áll a bit-címezhető memória. Melyik memóriaterületen vannak a bitenként címezhető regiszterek.

15. Elmélet: Miért és mikor kell a számok előtt # jelet használni. Mi a különbség " MOV A,3 " és " MOV A,#3 " között.

16. Elmélet: ACC=14H és B=23H. Mi lesz a tartalma H formában MUL AB után.

17. Elmélet: Mit tartalmaz a .HEX file, mire kell.

18. Elmélet: Mit tartalmaz és milyen formában egy program lista és egy hex formátumú fájlja?

19. Program: Ciklussal töltse fel 20H címtől 60 bájtot 0FFH értékkel.

20. Panel: Az alsó 3 nyomógombok legyenek bináris helyiértékek. Amelyik le van nyomva, annak a ledje világítson.

21. Elmélet: A 8051-es adatmemóriájának részletes felosztását rajzold le.

22. Program: Mi lesz A, B tartalma H alakban az alábbi program után:
MOV     A, #12H
MOV     B, #34H
RL      A
SWAP    A
SETB    ACC.52
RR      A
MUL     AB
 
23. Program: A és B regiszterek tartalma H alakban az alábbi program után:
MOV     A, #141
MOV     B, #13H
INC     A
RL      A
SWAP    A
INC     A
RR      A
DIV     AB

24. Program: Külső adatmemória 100-as címétől 15 bájt feltöltése 0A5H értékellel, majd ezt másolni a belső adatmemória 50H címétől.

25. Program: F = A * (B + /C) + A*B*C

26. Elmélet: Mit jelent, ha egy szegmens relokálható:

27. Elmélet: Bitcímeket alkalmazva, mi a 22H című regiszter 7. bitjének a bitcíme:

28. Elmélet: Milyen ugró utasítások használhatók bit operandussal:

29. Elmélet: Hogyan lehet szöveget kiíratni a képernyőre soros vonal közvetlen programozásával:

30. Elmélet: Counter/timer modul felépítése és üzemmódjai:

31. Elmélet: Melyek a soros perifériákhoz kapcsolódó regiszerek és bitek:

32. Elmélet: Melyek az időzítő modulokhoz kapcsolódó regiszerek és bitek. Mi a TF0 és a TR0 szerepe: 

33. Elmélet: Melyek a megszakításokhoz kapcsolódó regiszterek és bitek. Mi az EA bit szerepe:

=====ÖNÁLLÓ MÉRÉS=====


=====ÓRAI ANYAG=====

PROG	SEGMENT	CODE
STACK	SEGMENT	IDATA

V1	EQU	R3
V2	EQU	R4

RSEG	STACK
DS	16
RSEG	PROG
	MOV	SP,#STACK-1
	
	MOV	DPTR,#NEV
	
; Billentyűzetről kér be két számot.
; Összeg, Különbség, Szorzat, Hányados, Maradék
; Képernyőre ÉS Ledsorra is.
START:
	MOV	DPTR,#OPER_EGY
	CALL	S_SOROS_TXT
	CALL	S_CRLF_KI
	CALL	S_ECHO
	MOV	V1,A
	CALL	S_CRLF_KI
	CALL	S_CRLF_KI
	
	MOV	DPTR,#OPER_KET
	CALL	S_SOROS_TXT
	CALL	S_CRLF_KI
	CALL	S_ECHO
	CALL	S_CRLF_KI
	MOV	V2,A
	CALL	S_CRLF_KI
	
	MOV	DPTR,#CIMKE_ADD
	CALL	S_SOROS_TXT
	CALL	S_CRLF_KI
	MOV	A,V1
	ADD	A,V2
	CALL	S_DEC_KI
	CALL	S_CRLF_KI
	CALL	S_CRLF_KI
	
	MOV	DPTR,#CIMKE_SUB
	CALL	S_SOROS_TXT
	CALL	S_CRLF_KI
	MOV	A,V1
	CLR	C
	SUBB	A,V2
	CALL	S_DEC_KI
	CALL	S_CRLF_KI
	CALL	S_CRLF_KI
	
	MOV	DPTR,#CIMKE_MUL
	CALL	S_SOROS_TXT
	CALL	S_CRLF_KI
	MOV	A,V1
	MOV	B,V2
	MUL	AB
	PUSH	ACC
	MOV	A,B
	CALL	S_DEC_KI
	POP	ACC
	CALL	S_DEC_KI
	CALL	S_CRLF_KI
	CALL	S_CRLF_KI
	
	MOV	DPTR,#CIMKE_DIV_1
	CALL	S_SOROS_TXT
	CALL	S_CRLF_KI
	MOV	A,V1
	MOV	B,V2
	DIV	AB
	CALL	S_DEC_KI
	CALL	S_CRLF_KI
	MOV	DPTR,#CIMKE_DIV_2
	CALL	S_SOROS_TXT
	CALL	S_CRLF_KI
	MOV	A,B
	CALL	S_DEC_KI
	CALL	S_CRLF_KI
	CALL	S_CRLF_KI
	CALL	S_CRLF_KI
	JMP	START

;Kiírja a NEV szöveget.
START:
	CALL	S_SOROS_TXT
	CALL	S_BIL_VAR_ENTER
	JMP	START

------------------------------------Comma overdose



------------------------------------And I'm in the zone.
=====TÁBlÁZAT/SZÖVEG=====

OPER_EGY:	DB	'Kerem az elso operandust',0
OPER_KET:	DB	'Kerem a masodik operandust',0
CIMKE_ADD:	DB	'Osszeg:',0
CIMKE_SUB:	DB	'Kulonbseg:',0
CIMKE_MUL:	DB	'Szorzat:',0
CIMKE_DIV_1:	DB	'Hanyados:',0
CIMKE_DIV_2:	DB	'Maradek:',0
NEV:		DB	'Mw',0,'Space, Milky Way, Mars',0,'Space kitten',0 ;DPTR erre van állítva.

=====SZUBRUTIN GYŰJTEMÉNY=====

;akármilyen gombnyomásra vár, A-ba ír.
S_BIL_VAR:
        CALL	 S_SOROS_BE
        JZ  	 S_BIL_VAR
        RET
	
;enterre vár, A-ba ír.
S_BIL_VAR_ENTER:
        CALL	S_BIL_VAR
        XRL	A,#0DH
        JNZ	S_BIL_VAR_ENTER
        CALL	S_CRLF_KI
        RET

;új sor és soreleje
S_CRLF_KI:
	MOV	A,#0DH
	CALL	S_SOROS_KI
	MOV	A,#0AH
	CALL	S_SOROS_KI
	RET

;erteket olvas soros vonalrol decimalisan 0-255. A-ba olvas, B R2 megmarad, C torlodik
S_DEC_BE:	
	CALL	S_SOROS_BE
	CLR	C
	SUBB	A,#30H
	MOV	B,#100
	MUL	AB
	MOV	R2,A
	CALL	S_SOROS_BE
	CLR	C
	SUBB	A,#30H
	MOV	B,#10
	MUL	AB
	ADD	A,R2
	MOV	R2,A
	CALL	S_SOROS_BE
	CLR	C
	SUBB	A,#30H
	ADD	A,R2
	RET
	
;erteket kuld soros vonalra decimalisan 0-255. A-bol ir, A B megmarad
S_DEC_KI:	
	PUSH	ACC
	MOV	B,#100
	DIV	AB
	ADD	A,#30H
	CALL	S_SOROS_KI
	MOV	A,B
	MOV	B,#10
	DIV	AB
	ADD	A,#30H
	CALL	S_SOROS_KI
	MOV	A,B
	ADD	A,#30H
	CALL	S_SOROS_KI
	POP	ACC
	RET

;erteket olvas soros vonalrol, majd vissza is kuldi. A-ba olvas
S_ECHO:		
	CALL	S_DEC_BE
	CALL	S_DEC_KI
	RET

;gombokat olvas. A-ba ir, DPTR valtozik
S_KLAV:
	MOV	DPTR,#0C000H
	MOVX	A,@DPTR
	CPL	A
	RET

;gombokat olvas, és vár ha nem nyomtam semmit. A-ba ir, DPTR valtozik
S_KLAW:
	CALL	S_KLAV
	CJNE	A,#00H,L_AT1
	JMP	S_KLAW
L_AT1:	
	RET
	
;gombot olvas, vár amíg nem nyomok semmit, és akkor megy tovább ha elengedem. A-ba ir, DPTR valtozik
S_KLAWE:
	CALL	S_KLAW
	PUSH	ACC
L_UJ1:
	MOVX	A,@DPTR
	CJNE	A,0FFH,L_UJ1
	POP	ACC
	RET
	
;ledeket felvillant. A-ból ír, DPTR változik.
S_LED:
	CPL	A
	MOV	DPTR,#0C001H
	MOVX	@DPTR,A
	RET

;Soros vonalból olvas az aksiba
S_SOROS_BE:
	JNB	RI,S_SOROS_BE
	CLR	RI
	MOV	A,SBUF
	RET

;Soros vonalra írja ki az aksit
S_SOROS_KI:
	JNB	TI,S_SOROS_KI
	CLR	TI
	MOV	SBUF,A
	RET

;stringet kuld ki soros vonalon zarobitig. A-t torli, DPTR-t inicializalni kell a szoveg cimere
S_SOROS_TXT:
	CLR	A
	MOVC	A,@A+DPTR
	INC	DPTR
	JZ	ZAROBIT
	CALL	S_SOROS_KI
	JMP	S_SOROS_TXT
ZAROBIT:
	RET

END
